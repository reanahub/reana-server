{
  "definitions": {},
  "info": {
    "description": "Submit and manage workflows",
    "title": "REANA Workflow Controller",
    "version": "0.1"
  },
  "parameters": {},
  "paths": {
    "/api/workflows": {
      "get": {
        "description": "This resource is expecting an organization name and an user UUID. The information related to all workflows for a given user will be served as JSON",
        "operationId": "get_workflows",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Requests succeeded. The response contains the current workflows for a given user and organization.",
            "examples": {
              "application/json": [
                {
                  "id": "256b25f4-4cfb-4684-b7a8-73872ef455a1",
                  "organization": "default_org",
                  "status": "running",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "3c9b117c-d40a-49e3-a6de-5f89fcada5a3",
                  "organization": "default_org",
                  "status": "finished",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "72e3ee4f-9cd3-4dc7-906c-24511d9f5ee3",
                  "organization": "default_org",
                  "status": "waiting",
                  "user": "00000000-0000-0000-0000-000000000000"
                },
                {
                  "id": "c4c0a1a6-beef-46c7-be04-bf4b3beca5a1",
                  "organization": "default_org",
                  "status": "waiting",
                  "user": "00000000-0000-0000-0000-000000000000"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "organization": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed."
          },
          "404": {
            "description": "Request failed. User doesn't exist.",
            "examples": {
              "application/json": {
                "message": "User 00000000-0000-0000-0000-000000000000 doesn't exist"
              }
            }
          },
          "500": {
            "description": "Request failed. Internal controller error.",
            "examples": {
              "application/json": {
                "message": "Either organization or user doesn't exist."
              }
            }
          }
        },
        "summary": "Returns all workflows."
      },
      "post": {
        "description": "This resource expects a POST call to create a new workflow workspace.",
        "operationId": "create_workflow",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "JSON object including workflow parameters and workflow specification in JSON format (`yadageschemas.load()` output) with necessary data to instantiate a yadage workflow.",
            "in": "body",
            "name": "workflow",
            "required": true,
            "schema": {
              "properties": {
                "parameters": {
                  "description": "Workflow parameters.",
                  "type": "object"
                },
                "specification": {
                  "description": "Yadage specification in JSON format.",
                  "type": "object"
                },
                "type": {
                  "description": "Workflow type.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Request succeeded. The workflow has been created along with its workspace",
            "examples": {
              "application/json": {
                "message": "Workflow workspace has been created.",
                "workflow_id": "cdcf48b1-c2f3-4693-8230-b066e088c6ac"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          },
          "404": {
            "description": "Request failed. User doesn't exist.",
            "examples": {
              "application/json": {
                "message": "User 00000000-0000-0000-0000-000000000000 doesn't exist"
              }
            }
          }
        },
        "summary": "Create workflow and its workspace."
      }
    },
    "/api/workflows/{workflow_id}/status": {
      "get": {
        "description": "This resource reports the status of workflow.",
        "operationId": "get_workflow_status",
        "parameters": [
          {
            "description": "Required. Organization which the workflow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. Workflow UUID.",
            "in": "path",
            "name": "workflow_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. Info about workflow, including the status is returned.",
            "examples": {
              "application/json": {
                "id": "256b25f4-4cfb-4684-b7a8-73872ef455a1",
                "organization": "default_org",
                "status": "running",
                "user": "00000000-0000-0000-0000-000000000000"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed.",
            "examples": {
              "application/json": {
                "message": "Malformed request."
              }
            }
          },
          "403": {
            "description": "Request failed. User is not allowed to access workflow.",
            "examples": {
              "application/json": {
                "message": "User 00000000-0000-0000-0000-000000000000 is not allowed to access workflow 256b25f4-4cfb-4684-b7a8-73872ef455a1"
              }
            }
          },
          "404": {
            "description": "Request failed. Either User or Workflow doesn't exist.",
            "examples": {
              "application/json": {
                "message": "Workflow 256b25f4-4cfb-4684-b7a8-73872ef455a1 doesn't exist"
              }
            }
          },
          "500": {
            "description": "Request failed. Internal controller error."
          }
        },
        "summary": "Get workflow status."
      }
    },
    "/api/workflows/{workflow_id}/workspace": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "This resource is expecting a workflow UUID and a file to place in the workflow workspace.",
        "operationId": "seed_workflow",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. Workflow UUID.",
            "in": "path",
            "name": "workflow_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. File to add to the workflow workspace.",
            "in": "formData",
            "name": "file_content",
            "required": true,
            "type": "file"
          },
          {
            "description": "Required. File name.",
            "in": "query",
            "name": "file_name",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. The file has been added to the workspace.",
            "examples": {
              "application/json": {
                "message": "The file input.csv has been successfully transferred."
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          },
          "500": {
            "description": "Request failed. Internal controller error."
          }
        },
        "summary": "Adds a file to the workflow workspace."
      }
    },
    "/api/yadage/remote": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This resource is expecting JSON data with all the necessary information to instantiate a yadage workflow from a remote repository.",
        "operationId": "run_yadage_workflow_from_remote",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "Workflow information in JSON format with all the necessary data to instantiate a yadage workflow from a remote repository such as GitHub.",
            "in": "body",
            "name": "workflow_data",
            "required": true,
            "schema": {
              "properties": {
                "nparallel": {
                  "type": "integer"
                },
                "preset_pars": {
                  "description": "Workflow parameters.",
                  "type": "object"
                },
                "toplevel": {
                  "description": "Yadage toplevel argument. It represents the remote repository where the workflow should be pulled from.",
                  "type": "string"
                },
                "workflow": {
                  "description": "Yadage workflow parameter. It represents the name of the workflow spec file name inside the remote repository.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. The workflow has been instantiated.",
            "examples": {
              "application/json": {
                "message": "Workflow successfully launched",
                "workflow_id": "cdcf48b1-c2f3-4693-8230-b066e088c6ac"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          }
        },
        "summary": "Creates a new yadage workflow from a remote repository."
      }
    },
    "/api/yadage/spec": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This resource is expecting a JSON yadage specification.",
        "operationId": "run_yadage_workflow_from_spec",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "JSON object including workflow parameters and workflow specification in JSON format (`yadageschemas.load()` output) with necessary data to instantiate a yadage workflow.",
            "in": "body",
            "name": "workflow",
            "required": true,
            "schema": {
              "properties": {
                "parameters": {
                  "description": "Workflow parameters.",
                  "type": "object"
                },
                "workflow_spec": {
                  "description": "Yadage specification in JSON format.",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. The workflow has been instantiated.",
            "examples": {
              "application/json": {
                "message": "Workflow successfully launched",
                "workflow_id": "cdcf48b1-c2f3-4693-8230-b066e088c6ac"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          }
        },
        "summary": "Creates a new yadage workflow from a specification file."
      }
    },
    "/api/cwl/spec": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This resource is expecting a JSON cwl specification.",
        "operationId": "run_cwl_workflow_from_spec",
        "parameters": [
          {
            "description": "Required. Organization which the worklow belongs to.",
            "in": "query",
            "name": "organization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Required. UUID of workflow owner.",
            "in": "query",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "JSON object including workflow parameters and workflow specification in JSON format (`cwlschemas.load()` output) with necessary data to instantiate a cwl workflow.",
            "in": "body",
            "name": "workflow",
            "required": true,
            "schema": {
              "properties": {
                "parameters": {
                  "description": "Workflow inputs",
                  "type": "object"
                },
                "workflow_spec": {
                  "description": "CWL workflow",
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request succeeded. The workflow has been instantiated.",
            "examples": {
              "application/json": {
                "message": "Workflow successfully launched",
                "workflow_id": "cdcf48b1-c2f3-4693-8230-b066e088c6ac"
              }
            },
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "workflow_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Request failed. The incoming data specification seems malformed"
          }
        },
        "summary": "Creates a new cwl workflow from a specification file."
      }
    }
  },
  "swagger": "2.0",
  "tags": []
}